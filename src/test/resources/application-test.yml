spring:
  datasource:
    url: jdbc:mysql://localhost:3306/hhplus?characterEncoding=UTF-8&serverTimezone=UTC
    username: application
    password: application

  jpa:
    hibernate:
      ddl-auto: create-drop # 테스트 컨테이너에서만 사용
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        show_sql: true

    redis:
      host: ${spring.redis.host}
      port: ${spring.redis.port}

    redisson:
      single-server-config:
        address: ${spring.redisson.single-server-config.address}
    # 메시지 처리 확인 모드 - 수동 확인으로 처리 완료 후 커밋
  kafka:
    bootstrap-servers: ${spring.kafka.bootstrap-servers:localhost:9092}
    listener:
      concurrency: 2
      # 테스트 환경에서 빠른 처리를 위한 설정
      ack-mode: manual_immediate
      auto-startup: true
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: false  # manual ack 사용
      group-id: test-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        # 빠른 처리를 위한 설정
        fetch.min.bytes: 1
        fetch.max.wait.ms: 500
        session.timeout.ms: 10000
        heartbeat.interval.ms: 3000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 0  # 즉시 전송
    admin:
      properties:
        auto.create.topics.enable: true
